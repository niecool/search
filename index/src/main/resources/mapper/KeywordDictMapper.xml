<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nie.dao.KeywordDictDao">
  <resultMap id="BaseResultMap" type="com.nie.model.pojo.KeywordDict">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="keyword" jdbcType="VARCHAR" property="keyword" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="synonym" jdbcType="VARCHAR" property="synonym" />
    <result column="extented" jdbcType="VARCHAR" property="extented" />
    <result column="last_update_id" jdbcType="DECIMAL" property="lastUpdateId" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="data_from" jdbcType="CHAR" property="dataFrom" />
    <result column="last_update_name" jdbcType="VARCHAR" property="lastUpdateName" />
    <result column="is_check" jdbcType="SMALLINT" property="isCheck" />
    <result column="relatived" jdbcType="VARCHAR" property="relatived" />
    <result column="incompatible" jdbcType="VARCHAR" property="incompatible" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, keyword, type, synonym, extented, last_update_id, last_update_time, status, data_from, 
    last_update_name, is_check, relatived, incompatible
  </sql>
  <select id="selectByExample" parameterType="com.nie.dao.KeywordDictExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from keyword_dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.nie.dao.KeywordDictExample">
    delete from keyword_dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nie.model.pojo.KeywordDict" useGeneratedKeys="true" keyProperty="id">
    insert into keyword_dict (id, keyword, type, 
      synonym, extented, last_update_id, 
      last_update_time, status, data_from, 
      last_update_name, is_check, relatived, 
      incompatible)
    values (#{id,jdbcType=INTEGER}, #{keyword,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{synonym,jdbcType=VARCHAR}, #{extented,jdbcType=VARCHAR}, #{lastUpdateId,jdbcType=DECIMAL}, 
      #{lastUpdateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=SMALLINT}, #{dataFrom,jdbcType=CHAR}, 
      #{lastUpdateName,jdbcType=VARCHAR}, #{isCheck,jdbcType=SMALLINT}, #{relatived,jdbcType=VARCHAR}, 
      #{incompatible,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nie.model.pojo.KeywordDict">
    insert into keyword_dict
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="keyword != null">
        keyword,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="synonym != null">
        synonym,
      </if>
      <if test="extented != null">
        extented,
      </if>
      <if test="lastUpdateId != null">
        last_update_id,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="dataFrom != null">
        data_from,
      </if>
      <if test="lastUpdateName != null">
        last_update_name,
      </if>
      <if test="isCheck != null">
        is_check,
      </if>
      <if test="relatived != null">
        relatived,
      </if>
      <if test="incompatible != null">
        incompatible,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="keyword != null">
        #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="synonym != null">
        #{synonym,jdbcType=VARCHAR},
      </if>
      <if test="extented != null">
        #{extented,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateId != null">
        #{lastUpdateId,jdbcType=DECIMAL},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="dataFrom != null">
        #{dataFrom,jdbcType=CHAR},
      </if>
      <if test="lastUpdateName != null">
        #{lastUpdateName,jdbcType=VARCHAR},
      </if>
      <if test="isCheck != null">
        #{isCheck,jdbcType=SMALLINT},
      </if>
      <if test="relatived != null">
        #{relatived,jdbcType=VARCHAR},
      </if>
      <if test="incompatible != null">
        #{incompatible,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nie.dao.KeywordDictExample" resultType="java.lang.Long">
    select count(*) from keyword_dict
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update keyword_dict
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.keyword != null">
        keyword = #{record.keyword,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.synonym != null">
        synonym = #{record.synonym,jdbcType=VARCHAR},
      </if>
      <if test="record.extented != null">
        extented = #{record.extented,jdbcType=VARCHAR},
      </if>
      <if test="record.lastUpdateId != null">
        last_update_id = #{record.lastUpdateId,jdbcType=DECIMAL},
      </if>
      <if test="record.lastUpdateTime != null">
        last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.dataFrom != null">
        data_from = #{record.dataFrom,jdbcType=CHAR},
      </if>
      <if test="record.lastUpdateName != null">
        last_update_name = #{record.lastUpdateName,jdbcType=VARCHAR},
      </if>
      <if test="record.isCheck != null">
        is_check = #{record.isCheck,jdbcType=SMALLINT},
      </if>
      <if test="record.relatived != null">
        relatived = #{record.relatived,jdbcType=VARCHAR},
      </if>
      <if test="record.incompatible != null">
        incompatible = #{record.incompatible,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update keyword_dict
    set id = #{record.id,jdbcType=INTEGER},
      keyword = #{record.keyword,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      synonym = #{record.synonym,jdbcType=VARCHAR},
      extented = #{record.extented,jdbcType=VARCHAR},
      last_update_id = #{record.lastUpdateId,jdbcType=DECIMAL},
      last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=SMALLINT},
      data_from = #{record.dataFrom,jdbcType=CHAR},
      last_update_name = #{record.lastUpdateName,jdbcType=VARCHAR},
      is_check = #{record.isCheck,jdbcType=SMALLINT},
      relatived = #{record.relatived,jdbcType=VARCHAR},
      incompatible = #{record.incompatible,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">

    insert into keyword_dict (id, keyword, type,synonym, extented, last_update_id,
    last_update_time, status, data_from,
    last_update_name, is_check, relatived,
    incompatible)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (
      #{item.id,jdbcType=INTEGER},
      #{item.keyword,jdbcType=VARCHAR},
      #{item.type,jdbcType=INTEGER},
      #{item.synonym,jdbcType=VARCHAR},
      #{item.extented,jdbcType=VARCHAR},
      #{item.lastUpdateId,jdbcType=DECIMAL},
      #{item.lastUpdateTime,jdbcType=TIMESTAMP},
      #{item.status,jdbcType=SMALLINT},
      #{item.dataFrom,jdbcType=CHAR},
      #{item.lastUpdateName,jdbcType=VARCHAR},
      #{item.isCheck,jdbcType=SMALLINT},
      #{item.relatived,jdbcType=VARCHAR},
      #{item.incompatible,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>


</mapper>