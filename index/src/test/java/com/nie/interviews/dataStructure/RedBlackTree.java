package com.nie.interviews.dataStructure;

/**
 *
 * https://blog.csdn.net/eson_15/article/details/51144079
 *
 *
 * 理解：
 * 1.avl左右高度差不超过1，而红黑树左右高度差不超过1倍。
 * 2.红色小面必须是黑色，然后根结点是黑色，保证黑色比红色多，往往是相间的。然后只需要判断父节点颜色就可以知道自己该是什么颜色。
 *
 *
 * 条件：
 * 1.必定是红色或者黑色。
 * 2.根结点必定是黑色。
 * 3.每个红色下面必定是黑色的。
 * 4....叶子节点必定是黑色。
 * 5.根结点到叶子节点黑色数目必定相同
 *
 *
 *
 * 需要旋转的三种情况：
 * 1.父节点为红色，叔节点为红色，直接递归改颜色
 * 2.父节点是红色，叔叔节点是黑色，那么旋转（1.左边节点，就左旋。 2.右边节点就右旋）
 * 那么就能解决平衡问题。
 *
 * @author zhaochengye
 * @date 2019-04-30 11:36
 */
public class RedBlackTree {


}
